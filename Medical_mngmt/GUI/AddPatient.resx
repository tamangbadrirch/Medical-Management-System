<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AABJRU5ErkJggg==
</value>
  </data>
</root>