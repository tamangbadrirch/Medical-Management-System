<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        RU5ErkJggg==
</value>
  </data>
</root>